#
# Bunch Linux Distribution Configuration
# Maintainer: Wael Karman <wael.karman@gmail.com>
#

# =============================================================================
# BASIC DISTRIBUTION INFORMATION
# =============================================================================
DISTRO = "bunch-linux-dist"
DISTRO_NAME = "Bunch Linux"
DISTRO_VERSION = "1.0.0"
DISTRO_CODENAME = "Camel"
LOCALCONF_VERSION = "3"
MAINTAINER = "Wael Karman <wael.karman@gmail.com>"

# =============================================================================
# SDK CONFIGURATION
# =============================================================================
SDK_VENDOR = "-pokysdk"
SDK_VERSION = "${@d.getVar('DISTRO_VERSION').replace('snapshot-${METADATA_REVISION}', 'snapshot')}"
SDK_VERSION[vardepvalue] = "${SDK_VERSION}"
SDK_NAME = "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
SDKPATHINSTALL = "/opt/${DISTRO}/${SDK_VERSION}"

TARGET_VENDOR = "-poky"
TCLIBCAPPEND = ""

# =============================================================================
# CONFIGURATION OPTIONS (User Configurable)
# =============================================================================
BUNCH_USE_CASE ?= "general"
BUNCH_SECURITY_LEVEL ?= "minimal"
BUNCH_DEBUG_MODE ?= "1"
BUNCH_PRODUCTION_MODE ?= "0"
BUNCH_REALTIME ?= "0"
BUNCH_ENABLE_GRAPHICS ?= "1"
BUNCH_ENABLE_ALL_FEATURES ?= "1"

# =============================================================================
# INIT SYSTEM
# =============================================================================
VIRTUAL-RUNTIME_init_manager = "systemd"

# =============================================================================
# HARDWARE CONFIGURATION
# =============================================================================
ENABLE_UART = "${@bb.utils.contains('BUNCH_DEBUG_MODE', '1', '1', '0', d)}"

# Kernel selection
PREFERRED_PROVIDER_virtual/kernel = "${@bb.utils.contains('BUNCH_REALTIME', '1', 'linux-raspberrypi-rt', 'linux-raspberrypi', d)}"
PREFERRED_VERSION_linux-raspberrypi = "6.6.%"
PREFERRED_VERSION_linux-raspberrypi-rt = "6.6.%"

# =============================================================================
# DISTRO FEATURES CONFIGURATION
# =============================================================================
# Core features
BUNCH_CORE_FEATURES = "systemd largefile opengl ptest multiarch usrmerge rauc"

# Graphics features
BUNCH_GRAPHICS_FEATURES = "${@bb.utils.contains('BUNCH_ENABLE_GRAPHICS', '1', 'wayland egl drm gbm', '', d)}"

# Security features
BUNCH_SECURITY_FEATURES = "${@bb.utils.contains('BUNCH_SECURITY_LEVEL', 'standard', 'pam', '', d)}"
BUNCH_SECURITY_FEATURES += "${@bb.utils.contains('BUNCH_SECURITY_LEVEL', 'high', 'pam ima tpm2', '', d)}"
BUNCH_SECURITY_FEATURES += "${@bb.utils.contains('BUNCH_SECURITY_LEVEL', 'paranoid', 'pam ima tpm2 selinux', '', d)}"

# Use case features
BUNCH_MULTIMEDIA_FEATURES = "alsa pulseaudio gstreamer"
BUNCH_IOT_FEATURES = "bluetooth wifi"
BUNCH_NETWORKING_FEATURES = "ipv6 nfs"

BUNCH_USECASE_FEATURES = "${@bb.utils.contains('BUNCH_USE_CASE', 'general', '${BUNCH_MULTIMEDIA_FEATURES} ${BUNCH_IOT_FEATURES}', '', d)}"
BUNCH_USECASE_FEATURES += "${@bb.utils.contains('BUNCH_USE_CASE', 'multimedia', '${BUNCH_MULTIMEDIA_FEATURES}', '', d)}"
BUNCH_USECASE_FEATURES += "${@bb.utils.contains('BUNCH_USE_CASE', 'iot', '${BUNCH_IOT_FEATURES}', '', d)}"
BUNCH_USECASE_FEATURES += "${@bb.utils.contains('BUNCH_USE_CASE', 'server', '${BUNCH_NETWORKING_FEATURES}', '', d)}"

# Debug features
BUNCH_DEBUG_FEATURES = "${@bb.utils.contains('BUNCH_DEBUG_MODE', '1', 'tools-debug tools-profile', '', d)}"

# Debug kernel pi√π verboso quando in debug mode
BUNCH_KERNEL_DEBUG = "${@bb.utils.contains('BUNCH_DEBUG_MODE', '1', 'console=ttyS1,115200 console=tty1 loglevel=8 drm.debug=0 audit=0', '', d)}"
CMDLINE:append = " ${BUNCH_KERNEL_DEBUG}"

# Optional features
BUNCH_OPTIONAL_FEATURES = "${@bb.utils.contains('BUNCH_ENABLE_ALL_FEATURES', '1', 'vnc x11 qt6 python3 hwcodecs', '', d)}"

BUNCH_OPTIONAL_IMAGE_FEATURES = "${@bb.utils.contains('BUNCH_ENABLE_ALL_FEATURES', '1', 'debug-tweaks ssh-server-openssh tools-sdk package-management', '', d)}"

# Features to remove
BUNCH_REMOVE_FEATURES = "sysvinit"
BUNCH_PRODUCTION_REMOVE = "${@bb.utils.contains('BUNCH_PRODUCTION_MODE', '1', 'vnc tools-debug tools-profile', '', d)}"

# =============================================================================
# FINAL DISTRO FEATURES
# =============================================================================
BUNCH_DEFAULT_DISTRO_FEATURES = "${BUNCH_CORE_FEATURES} ${BUNCH_GRAPHICS_FEATURES}"
DISTRO_FEATURES = "${DISTRO_FEATURES_DEFAULT} ${BUNCH_DEFAULT_DISTRO_FEATURES}"
DISTRO_FEATURES += " ${BUNCH_SECURITY_FEATURES} ${BUNCH_USECASE_FEATURES}"
DISTRO_FEATURES += " ${BUNCH_DEBUG_FEATURES} ${BUNCH_OPTIONAL_FEATURES}"
DISTRO_FEATURES:remove = "${BUNCH_REMOVE_FEATURES} ${BUNCH_PRODUCTION_REMOVE}"

# =============================================================================
# PACKAGE CONFIGURATION
# =============================================================================
POKY_DEFAULT_EXTRA_RDEPENDS = "packagegroup-core-boot"
POKY_DEFAULT_EXTRA_RRECOMMENDS = "kernel-module-af-packet"

DISTRO_EXTRA_RDEPENDS += "base-files"
DISTRO_EXTRA_RDEPENDS += "${POKY_DEFAULT_EXTRA_RDEPENDS}"
DISTRO_EXTRA_RRECOMMENDS += "${POKY_DEFAULT_EXTRA_RRECOMMENDS}"

# =============================================================================
# GRAPHICS CONFIGURATION
# =============================================================================
PACKAGECONFIG_KDE ?= "${@bb.utils.contains('DISTRO_FEATURES', 'kde', 'sm fontconfig kms gbm libinput sql-sqlite openssl', '', d)}"
PACKAGECONFIG_QT6 ?= "${@bb.utils.contains('DISTRO_FEATURES', 'qt6', 'opengl eglfs kms gbm libinput fontconfig sql-sqlite openssl', '', d)}"

# =============================================================================
# OPTIMIZATION SETTINGS
# =============================================================================
BUNCH_SIZE_OPTS = "${@bb.utils.contains('BUNCH_PRODUCTION_MODE', '1', '-Os', '-O2', d)}"
SELECTED_OPTIMIZATION = "${BUNCH_SIZE_OPTS}"

# =============================================================================
# QUALITY ASSURANCE
# =============================================================================
SANITY_TESTED_DISTROS ?= " \
            ubuntu-20.04 \n \
            ubuntu-22.04 \n \
            ubuntu-24.04 \n \
            debian-11 \n \
            debian-12 \n \
            "

# Enhanced QA for production builds
WARN_TO_ERROR_QA = "${@bb.utils.contains('BUNCH_PRODUCTION_MODE', '1', 'unsafe-references-in-binaries', '', d)}"
WARN_QA:remove = "${WARN_TO_ERROR_QA}"
ERROR_QA:append = " ${WARN_TO_ERROR_QA}"

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
BUNCH_SECURITY_CFLAGS = "${@bb.utils.contains('BUNCH_SECURITY_LEVEL', 'high', '-fstack-protector-strong', '', d)}"
SECURITY_CFLAGS += " ${BUNCH_SECURITY_CFLAGS}"

# =============================================================================
# BUILD SYSTEM CONFIGURATION
# =============================================================================
BB_SIGNATURE_HANDLER ?= "OEEquivHash"
BB_HASHSERVE ??= "auto"

# Inherit classes
INHERIT += "poky-sanity uninative"
INHERIT += "${@bb.utils.contains('BUNCH_SECURITY_LEVEL', 'high', 'create-spdx', '', d)}"

# =============================================================================
# REQUIRED INCLUDES
# =============================================================================
require conf/distro/include/poky-world-exclude.inc
require conf/distro/include/no-static-libs.inc
require conf/distro/include/yocto-uninative.inc
require conf/distro/include/security_flags.inc